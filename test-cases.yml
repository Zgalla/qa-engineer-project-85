---
- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
    При верном вводе логине и пароля пользователь входит в систему
  prerequisites: |
    Открыта страница логина
  test-data: |
    Логин = Grem1 Пароль = password
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователь попадает на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь получает сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Логин = hexlet Пароль = password
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователь попадает на главную страницу

- summary: |
    Проверка успешной регистрации
  requirement: |
    При корректном заполнении всех полей формы, осуществляется успешная регистрация пользователя
  prerequisites: |
    Открыта основная страница сайта
    Пользователь не авторизирован
  test-data: |
    no data
  steps:
    - Нажимаем на кнопку "Sign up"
    - Заполняем поля формы регистрации валидными данными
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно зарегистрирован

- summary: |
    Проверка успешной авторизации
  requirement: |
    При корректном введении данных, осуществляется успешный вход на сайт
  prerequisites: |
    Открыта основная страница сайта
    Пользователь не авторизирован
  test-data: |
    Email = zgalina@mail.ru
    Password = Gremlin1
  steps:
    - Нажимаем на кнопку "Sign in"
    - Заполняем поля формы авторизации
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизирован

- summary: |
    Создание игры с ботом
  requirement: |
    При выборе нужной тематики, уровня сложности, максимального времени игры и выбора соперника - создается новая игра
  prerequisites: |
    Открыта основная страница сайта
    Пользователь авторизован
  test-data: |
    Level = 1, Game Type = With a bot, Time control = 10 min, task = rect_area, Tags = math, rest
  steps:
    - Нажать на кнопку "Create a game"
    - Выбрать параметры
    - Нажать на кнопку "Create battle"
  expected-result: |
    Создается новая игра по указанным параметрам

- summary: |
    Создание новой игры неавторизированным пользователем
  requirement: |
    При попытке создании новой игры неавторизированным пользователем, создается новая игра с рандомной тематикой, уровнем и соперником
  prerequisites: |
    Открыта основная страница сайта
    Пользователь не авторизирован
  test-data: |
    no data
  steps:
    - Нажать на кнопку "Try simple battle"
  expected-result: |
    Cоздается новая игра с рандомной тематикой, уровнем и соперником

- summary: |
    Изменение языка кода в процессе игры
  requirement: |
    Пользователь может менять язык решения в процессе игры
  prerequisites: |
    Пользователь авторизован
    Создана новая игра
  test-data: |
    Используемый язык = Node.js 20.11.1 
  steps:
    - В окне заданного языка в выпадающем списке выбрать "Python 3.11.4" (скрин "Смена языка")
  expected-result: |
    В форме написания кода решения изменился язык на выбранный

- summary: |
    Просмотр рейтинга с достижениями игроков сайта
  requirement: |
    Пользователь может просматривать таблицу рейтинга с достижениями игроков
  prerequisites: |
    Открыта основная страница сайта
    Пользователь авторизован
  test-data: |
    no data
  steps:
    - Нажать на свой никнейм в верхней правой части страницы
    - Из выпавшего списка выбрать "Users rating"
  expected-result: |
    Открывается таблица достижений игроков 
